plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.7'
}

group = 'io.github.easybill'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.sf.saxon:Saxon-HE:12.5'
    implementation 'org.apache.xmlgraphics:fop:2.9'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
}

jar {
    archiveBaseName = rootProject.name as String
    archiveVersion.set('')
    def shortCommitHash = 'git rev-parse --short=8 HEAD'.execute().text.trim()

    manifest {
        attributes 'Implementation-Title': rootProject.name,
                'Implementation-Version': "${currentVersion} (${shortCommitHash})",
                'Version': "${currentVersion} (${shortCommitHash})",
                'Main-Class': mainClassName
    }
}

shadowJar {
    archiveBaseName = rootProject.name as String
    archiveVersion.set('')
    archiveClassifier.set(null)
    mergeServiceFiles()
}

tasks.register('buildDockerImage', Exec) {
    group = 'Docker'
    dependsOn shadowJar
    description = 'Builds the Docker image for the application.'

    commandLine '/usr/bin/env', 'docker', 'build', '-t', 'xrviz-service', '.'
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '8.10.1'
}

tasks.register('createVersionBadge') {
    group = 'GitHub'
    doLast {
        def inputFile = file('src/test/resources/version-batch.svg')
        def outputFile = file('version-badge.svg')

        outputFile.text = inputFile.text.replaceAll('\\$VERS\\$', currentVersion)
    }
}

tasks.register('getLatestGradleVersion') {
    doLast {
        def responseText = project.resources.text.fromUri('https://api.github.com/repos/gradle/gradle/releases').asString()
        def latestStableVersion = (responseText =~ /"tag_name"\s*:\s*"v(\d+\.\d+(?:\.\d+)?)"[^}]+"draft"\s*:\s*(false)[^}]+"prerelease"\s*:\s*(false)/)
                .findAll().first()[1]

        if (latestStableVersion) {
            if (latestStableVersion == gradle.gradleVersion) {
                println "You are up to date ($latestStableVersion)."
            } else {
                println "Latest stable Gradle version is: $latestStableVersion (in use: ${gradle.gradleVersion})" +
                        "\n\nGet it with: ./gradlew wrapper --gradle-version=$latestStableVersion"
            }
        } else {
            println "Could not determine the latest stable Gradle version."
        }
    }
}
